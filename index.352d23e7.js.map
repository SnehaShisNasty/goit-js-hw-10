{"mappings":"YAMA,IAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,UAC/BC,IAAKF,SAASC,cAAc,OAC5BE,QAASH,SAASC,cAAc,WAChCG,MAAOJ,SAASC,cAAc,WAGhCH,EAAKM,MAAMC,MAAMC,QAAU,OAC3BR,EAAKK,QAAQE,MAAMC,QAAU,OAC7BR,EAAKC,OAAOM,MAAMC,QAAU,OCZnBC,MAAM,uCAAuCC,MAAK,SAAAC,GACvD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,UAA0BC,OAAhBH,EAASI,SAErC,OAAOJ,EAASK,M,IDUjBN,MAAK,SAAAO,GACJjB,EAAKC,OAAOM,MAAMC,QAAU,OAC5BR,EAAKC,OAAOiB,UAAYD,EACrBE,KACC,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,K,MAAW,+BACSR,OAAPO,EAAG,MAASP,OAALQ,EAAK,oB,IAGjCC,KAAK,G,IAETC,OAAM,SAAAlB,GACLmB,QAAQnB,MAAM,2BAA4BA,GAC1CN,EAAKM,MAAMC,MAAMC,QAAU,M,IAE5BkB,SAAQ,WACP1B,EAAKK,QAAQE,MAAMC,QAAU,M,IAGjCR,EAAKC,OAAO0B,iBAAiB,UAE7B,SAAsBC,GACpB5B,EAAKK,QAAQE,MAAMC,QAAU,OAC7BR,EAAKM,MAAMC,MAAMC,QAAU,OAE3BiB,QAAQI,IAAI,qBAAsBD,EAAME,OAAOC,QC9BxBC,EDgCPJ,EAAMK,cAAcF,MC1B9BG,EAAS,IAAIC,gBAAgB,CACjCC,UAAWJ,EACXK,QAJA,0EAOK5B,MAAM,GAAeK,OAVX,sCAUQ,KAAgBA,OATvB,SASoB,KAAUA,OAAPoB,IAAUxB,MAAK,SAAAC,GACtD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,UAA0BC,OAAhBH,EAASI,SAErC,OAAOJ,EAASK,M,KDkBfN,MAAK,SAAA4B,GACmB,IAAnBA,EAAQC,SACVvC,EAAKM,MAAMC,MAAMC,QAAU,QAE7BR,EAAKI,IAAIG,MAAMC,QAAU,QACzBR,EAAKI,IAAIc,UAAYoB,EAClBnB,KACC,SAAAC,G,IAAGoB,EAAGpB,EAAHoB,IAAKC,EAAMrB,EAANqB,O,MAAa,0BACmB3B,OAA3B0B,EAAI,yBACV1B,OADiC2B,EAAO,GAAGnB,KAAK,uBAEjDR,OADC2B,EAAO,GAAGnB,KAAK,yBACMR,OAAtB2B,EAAO,GAAGC,YAAY,e,IAG7BnB,KAAK,IACRE,QAAQI,IAAIS,EAAQC,O,IAErBf,OAAM,SAAAlB,GACLmB,QAAQnB,MAAM,2BAA4BA,GAC1CN,EAAKM,MAAMC,MAAMC,QAAU,M,IAE5BkB,SAAQ,WACP1B,EAAKK,QAAQE,MAAMC,QAAU,M,ICtDnC,IAAyBwB,EAMjBE,C","sources":["src/index.js","src/cat-api.js"],"sourcesContent":["// import axios from 'axios';\n\n// axios.defaults.headers.common['x-api-key'] =\n//   'live_7dDHCOo0JZCTbep0atS3ICUsRoXBfIxX7884Y8fBBYSfzVm1xFPUnss76zjFZjQh';\nimport { fetchBreeds, fetchCatByBreed } from './cat-api';\n\nconst refs = {\n  select: document.querySelector('select'),\n  div: document.querySelector('div'),\n  loading: document.querySelector('.loader'),\n  error: document.querySelector('.error'),\n};\n\nrefs.error.style.display = 'none';\nrefs.loading.style.display = 'flex';\nrefs.select.style.display = 'none';\nfetchBreeds()\n  .then(data => {\n    refs.select.style.display = 'flex';\n    refs.select.innerHTML = data\n      .map(\n        ({ id, name }) => `\n           <option value=\"${id}\">${name}</option>\n      `\n      )\n      .join('');\n  })\n  .catch(error => {\n    console.error('Error fetching cat data:', error);\n    refs.error.style.display = 'flex';\n  })\n  .finally(() => {\n    refs.loading.style.display = 'none';\n  });\n\nrefs.select.addEventListener('change', handleChange);\n\nfunction handleChange(event) {\n  refs.loading.style.display = 'flex';\n  refs.error.style.display = 'none';\n\n  console.log('Selected breed ID:', event.target.value);\n\n  fetchCatByBreed(event.currentTarget.value)\n    .then(catData => {\n      if (catData.length === 0) {\n        refs.error.style.display = 'flex';\n      }\n      refs.div.style.display = 'block';\n      refs.div.innerHTML = catData\n        .map(\n          ({ url, breeds }) => `\n           <img src=\"${url}\" width=\"500px\" alt=\"${breeds[0].name}\">\n           <h2>${breeds[0].name}</h2>\n           <p>${breeds[0].temperament}</p>\n      `\n        )\n        .join('');\n      console.log(catData.length);\n    })\n    .catch(error => {\n      console.error('Error fetching cat data:', error);\n      refs.error.style.display = 'flex';\n    })\n    .finally(() => {\n      refs.loading.style.display = 'none';\n    });\n}\n","export { fetchBreeds, fetchCatByBreed };\n\nfunction fetchBreeds() {\n  return fetch('https://api.thecatapi.com/v1/breeds').then(response => {\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n    return response.json();\n  });\n}\n\nfunction fetchCatByBreed(breedId) {\n  const BASE_URL = 'https://api.thecatapi.com/v1/images';\n  const END_POINT = 'search';\n  const API_KEY =\n    'live_7dDHCOo0JZCTbep0atS3ICUsRoXBfIxX7884Y8fBBYSfzVm1xFPUnss76zjFZjQh';\n\n  const params = new URLSearchParams({\n    breed_ids: breedId,\n    api_key: API_KEY,\n  });\n\n  return fetch(`${BASE_URL}/${END_POINT}?${params}`).then(response => {\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n    return response.json();\n  });\n}\n"],"names":["$b8f9b7833fa37166$var$refs","select","document","querySelector","div","loading","error","style","display","fetch","then","response","ok","Error","concat","status","json","data","innerHTML","map","param","id","name","join","catch","console","finally","addEventListener","event","log","target","value","breedId","currentTarget","params","URLSearchParams","breed_ids","api_key","catData","length","url","breeds","temperament"],"version":3,"file":"index.352d23e7.js.map"}